apply from: rootProject.rootDir.getAbsolutePath() + "/gradles/const.gradle"
apply from: rootProject.rootDir.getAbsolutePath() + "/gradles/utils.gradle"

/** ******************************************************************************************/

/**
 * 编译脚本
 */
buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/repositories/central/" }
//        mavenCentral()
    }

    /*
    Spring Cloud与Spring Boot版本匹配关系
    Spring Cloud	Spring Boot
    Finchley	    兼容Spring Boot 2.0.x，不兼容Spring Boot 1.5.x
    Dalston	        兼容Spring Boot 1.5.x，不兼容Spring Boot 2.0.x
    Edgware	        兼容Spring Boot 1.5.x，不兼容Spring Boot 2.0.x
    Camden	        兼容Spring Boot 1.4.x，也兼容Spring Boot 1.5.x
    Brixton	        兼容Spring Boot 1.3.x，也兼容Spring Boot 1.4.x
    Angel	        兼容Spring Boot 1.2.x
    */

    ext {
        springBootVersion = "1.5.10.RELEASE"
        springBootAdminVersion = "1.5.7"
        springCloudVersion = "Edgware.SR3"//"Dalston.SR4"
        dockerPluginVersion = "3.2.4"
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:${dockerPluginVersion}")
    }
}

/** ******************************************************************************************/

/**
 * 每个子项目
 */
subprojects {
    apply from: gradlesPath + "const.gradle"
    apply from: gradlesPath + "utils.gradle"
}

/**
 * 根项目
 */
allprojects {
    //公共插件
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "maven"

    group "${projectGroup}"
    version "${projectVersion}"

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/repositories/central/" }
//        mavenCentral()
    }
}

/** ******************************************************************************************/


configure(isJavaProject()) {
    apply from: gradlesPath + "java.gradle"
}

configure(isApiProject()) {
    apply from: gradlesPath + "api.gradle"
}

configure(isSdkProject()) {
    apply from: gradlesPath + "sdk.gradle"
}

configure(isDcsServerProject()) {
    apply from: gradlesPath + "dcs.gradle"
}

configure(isWebServiceProject()) {
//    apply from: gradlesPath + "springcloud-service.gradle"
    apply from: gradlesPath + "springboot-web.gradle"

    dependencies {
        compile project(":util:util-dubbo")
    }
}

configure(isGateProject()) {
    apply from: gradlesPath + "springcloud-ui.gradle"
}

//configure(isDockerProject()) {
//    apply from: gradlesPath + "docker.gradle"
//}

/** ******************************************************************************************/

